name: Authorization

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build-path: ${{ steps.build.outputs.build-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Set build path
        id: build
        run: echo "build-path=${GITHUB_WORKSPACE}" >> $GITHUB_OUTPUT

  package:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      zip-path: ${{ steps.package.outputs.zip-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Copy build artifacts
      #   run: cp -r ${{ needs.build.outputs.build-path }}/* ./

      - name: Zip project files
        id: package
        run: |
          zip -r lambda_function.zip . -x "*.git*"
          echo "zip-path=${GITHUB_WORKSPACE}/lambda_function.zip" >> $GITHUB_OUTPUT

      - name: Verify zip file creation
        run: ls -l ${{ github.workspace }}/lambda_function.zip    

  deploy:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verify zip file path
        run: ls -l ${{ needs.package.outputs.zip-path }}    

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://${{ needs.package.outputs.zip-path }}
